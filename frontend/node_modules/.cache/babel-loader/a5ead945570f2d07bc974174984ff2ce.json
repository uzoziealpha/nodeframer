{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initPjs = void 0;\n\nconst initPjs = engine => {\n  const particlesJS = (tagId, options) => {\n    return engine.load(tagId, options);\n  };\n\n  particlesJS.load = (tagId, pathConfigJson, callback) => {\n    engine.loadJSON(tagId, pathConfigJson).then(container => {\n      if (container) {\n        callback(container);\n      }\n    }).catch(() => {\n      callback(undefined);\n    });\n  };\n\n  particlesJS.setOnClickHandler = callback => {\n    engine.setOnClickHandler(callback);\n  };\n\n  const pJSDom = engine.dom();\n  return {\n    particlesJS,\n    pJSDom\n  };\n};\n\nexports.initPjs = initPjs;","map":{"version":3,"sources":["/Users/obinnauzozie/Desktop/robo/frontend/node_modules/tsparticles/pjs.js"],"names":["Object","defineProperty","exports","value","initPjs","engine","particlesJS","tagId","options","load","pathConfigJson","callback","loadJSON","then","container","catch","undefined","setOnClickHandler","pJSDom","dom"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,MAAMA,OAAO,GAAIC,MAAD,IAAY;AACxB,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACpC,WAAOH,MAAM,CAACI,IAAP,CAAYF,KAAZ,EAAmBC,OAAnB,CAAP;AACH,GAFD;;AAGAF,EAAAA,WAAW,CAACG,IAAZ,GAAmB,CAACF,KAAD,EAAQG,cAAR,EAAwBC,QAAxB,KAAqC;AACpDN,IAAAA,MAAM,CACDO,QADL,CACcL,KADd,EACqBG,cADrB,EAEKG,IAFL,CAEWC,SAAD,IAAe;AACrB,UAAIA,SAAJ,EAAe;AACXH,QAAAA,QAAQ,CAACG,SAAD,CAAR;AACH;AACJ,KAND,EAOKC,KAPL,CAOW,MAAM;AACbJ,MAAAA,QAAQ,CAACK,SAAD,CAAR;AACH,KATD;AAUH,GAXD;;AAYAV,EAAAA,WAAW,CAACW,iBAAZ,GAAiCN,QAAD,IAAc;AAC1CN,IAAAA,MAAM,CAACY,iBAAP,CAAyBN,QAAzB;AACH,GAFD;;AAGA,QAAMO,MAAM,GAAGb,MAAM,CAACc,GAAP,EAAf;AACA,SAAO;AAAEb,IAAAA,WAAF;AAAeY,IAAAA;AAAf,GAAP;AACH,CArBD;;AAsBAhB,OAAO,CAACE,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initPjs = void 0;\nconst initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexports.initPjs = initPjs;\n"]},"metadata":{},"sourceType":"script"}