{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Loader_engine;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Loader = void 0;\n\nconst Utils_1 = require(\"./Utils\");\n\nconst Container_1 = require(\"./Container\");\n\nconst Utils_2 = require(\"../Utils\");\n\nfunction fetchError(statusCode) {\n  console.error(`Error tsParticles - fetch status: ${statusCode}`);\n  console.error(\"Error tsParticles - File config not found\");\n}\n\nclass Loader {\n  constructor(engine) {\n    _Loader_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Loader_engine, engine, \"f\");\n  }\n\n  dom() {\n    return __classPrivateFieldGet(this, _Loader_engine, \"f\").domArray;\n  }\n\n  domItem(index) {\n    const dom = this.dom();\n    const item = dom[index];\n\n    if (item && !item.destroyed) {\n      return item;\n    }\n\n    dom.splice(index, 1);\n  }\n\n  async loadOptions(params) {\n    var _a, _b, _c;\n\n    const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(Math.random() * 10000)}`;\n    const {\n      options,\n      index\n    } = params;\n    let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = tagId;\n      (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n    }\n\n    const currentOptions = options instanceof Array ? (0, Utils_2.itemFromArray)(options, index) : options;\n    const dom = this.dom();\n    const oldIndex = dom.findIndex(v => v.id === tagId);\n\n    if (oldIndex >= 0) {\n      const old = this.domItem(oldIndex);\n\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n\n    let canvasEl;\n\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[Utils_1.Constants.generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[Utils_1.Constants.generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[Utils_1.Constants.generatedAttribute] = \"true\";\n        canvasEl.style.width = \"100%\";\n        canvasEl.style.height = \"100%\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n\n    const newItem = new Container_1.Container(__classPrivateFieldGet(this, _Loader_engine, \"f\"), tagId, currentOptions);\n\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n\n  async loadRemoteOptions(params) {\n    const {\n      url: jsonUrl,\n      index\n    } = params;\n    const url = jsonUrl instanceof Array ? (0, Utils_2.itemFromArray)(jsonUrl, index) : jsonUrl;\n\n    if (!url) {\n      return;\n    }\n\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      fetchError(response.status);\n      return;\n    }\n\n    const data = await response.json();\n    return this.loadOptions({\n      tagId: params.tagId,\n      element: params.element,\n      index,\n      options: data\n    });\n  }\n\n  load(tagId, options, index) {\n    const params = {\n      index\n    };\n\n    if (typeof tagId === \"string\") {\n      params.tagId = tagId;\n    } else {\n      params.options = tagId;\n    }\n\n    if (typeof options === \"number\") {\n      params.index = options !== null && options !== void 0 ? options : params.index;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n\n    return this.loadOptions(params);\n  }\n\n  async set(id, domContainer, options, index) {\n    const params = {\n      index\n    };\n\n    if (typeof id === \"string\") {\n      params.tagId = id;\n    } else {\n      params.element = id;\n    }\n\n    if (domContainer instanceof HTMLElement) {\n      params.element = domContainer;\n    } else {\n      params.options = domContainer;\n    }\n\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n\n    return this.loadOptions(params);\n  }\n\n  async loadJSON(tagId, jsonUrl, index) {\n    let url, id;\n\n    if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = jsonUrl;\n    }\n\n    return this.loadRemoteOptions({\n      tagId: id,\n      url,\n      index\n    });\n  }\n\n  async setJSON(id, domContainer, jsonUrl, index) {\n    let url, newId, newIndex, element;\n\n    if (id instanceof HTMLElement) {\n      element = id;\n      url = domContainer;\n      newIndex = jsonUrl;\n    } else {\n      newId = id;\n      element = domContainer;\n      url = jsonUrl;\n      newIndex = index;\n    }\n\n    return this.loadRemoteOptions({\n      tagId: newId,\n      url,\n      index: newIndex,\n      element\n    });\n  }\n\n  setOnClickHandler(callback) {\n    const dom = this.dom();\n\n    if (dom.length === 0) {\n      throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n    }\n\n    for (const domItem of dom) {\n      domItem.addClickHandler(callback);\n    }\n  }\n\n}\n\nexports.Loader = Loader;\n_Loader_engine = new WeakMap();","map":{"version":3,"sources":["/Users/obinnauzozie/Desktop/robo/frontend/node_modules/tsparticles/Core/Loader.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Loader_engine","Object","defineProperty","exports","Loader","Utils_1","require","Container_1","Utils_2","fetchError","statusCode","console","error","constructor","engine","dom","domArray","domItem","index","item","destroyed","splice","loadOptions","params","_a","_b","_c","tagId","Math","floor","random","options","domContainer","element","document","getElementById","createElement","id","querySelector","append","currentOptions","Array","itemFromArray","oldIndex","findIndex","v","old","destroy","canvasEl","tagName","toLowerCase","dataset","Constants","generatedAttribute","existingCanvases","getElementsByTagName","length","style","width","height","appendChild","newItem","Container","push","canvas","loadCanvas","start","loadRemoteOptions","url","jsonUrl","response","fetch","ok","status","data","json","load","HTMLElement","loadJSON","undefined","setJSON","newId","newIndex","setOnClickHandler","callback","Error","addClickHandler","WeakMap"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Loader_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Loader = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Container_1 = require(\"./Container\");\nconst Utils_2 = require(\"../Utils\");\nfunction fetchError(statusCode) {\n    console.error(`Error tsParticles - fetch status: ${statusCode}`);\n    console.error(\"Error tsParticles - File config not found\");\n}\nclass Loader {\n    constructor(engine) {\n        _Loader_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Loader_engine, engine, \"f\");\n    }\n    dom() {\n        return __classPrivateFieldGet(this, _Loader_engine, \"f\").domArray;\n    }\n    domItem(index) {\n        const dom = this.dom();\n        const item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(Math.random() * 10000)}`;\n        const { options, index } = params;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = options instanceof Array ? (0, Utils_2.itemFromArray)(options, index) : options;\n        const dom = this.dom();\n        const oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[Utils_1.Constants.generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[Utils_1.Constants.generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[Utils_1.Constants.generatedAttribute] = \"true\";\n                canvasEl.style.width = \"100%\";\n                canvasEl.style.height = \"100%\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        const newItem = new Container_1.Container(__classPrivateFieldGet(this, _Loader_engine, \"f\"), tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        const { url: jsonUrl, index } = params;\n        const url = jsonUrl instanceof Array ? (0, Utils_2.itemFromArray)(jsonUrl, index) : jsonUrl;\n        if (!url) {\n            return;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n            fetchError(response.status);\n            return;\n        }\n        const data = await response.json();\n        return this.loadOptions({\n            tagId: params.tagId,\n            element: params.element,\n            index,\n            options: data,\n        });\n    }\n    load(tagId, options, index) {\n        const params = { index };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options !== null && options !== void 0 ? options : params.index;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index });\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element });\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (dom.length === 0) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\nexports.Loader = Loader;\n_Loader_engine = new WeakMap();\n"]},"metadata":{},"sourceType":"script"}